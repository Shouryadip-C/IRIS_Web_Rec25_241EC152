@{
    Layout = "~/Views/Shared/_StudentLayout.cshtml";
    ViewData["Title"] = "New Booking";
}

@model NewBookingViewModel

<div class="container mt-2">
    <h2>New Booking</h2>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success">@TempData["Success"]</div>
    }

    <!-- 1) Filter Form -->
    <form method="get" asp-action="NewBooking" class="row g-3 mt-2 mb-4">
        <div class="col-md-3">
            <label asp-for="BookingType" class="form-label">Booking Type</label>
            <select id="bookingType" asp-for="BookingType" class="form-select">
                <option value="">-- Select --</option>
                <option value="Court" selected="@(Model.BookingType == "Court" ? "selected" : null)">Court</option>
                <option value="Equipment" selected="@(Model.BookingType == "Equipment" ? "selected" : null)">Equipment</option>
            </select>
        </div>

        <div class="col-md-3">
            <label asp-for="SportType" class="form-label">Sport Type</label>
            <select id="sportType" asp-for="SportType" class="form-select">
                <option value="">-- Select Sport --</option>
                @if (Model.SportTypes != null)
                {
                    foreach (var st in Model.SportTypes)
                    {
                        <option value="@st" selected="@(Model.SportType == st ? "selected" : null)">@st</option>
                    }
                }
            </select>
        </div>

        <div class="col-md-3">
            <label asp-for="SelectedDate" class="form-label">Date</label>
            <input id="datePicker" asp-for="SelectedDate" class="form-control date" />
        </div>

        <div class="col-md-3 d-flex align-items-end">
            <button class="btn btn-primary" type="submit">Search</button>
        </div>
    </form>

    <!-- 2) Display Available Courts/Equipment as Cards -->
    @if (Model.BookingType == "Court" && Model.AvailableCourts != null && Model.AvailableCourts.Any())
    {
        <div class="row row-cols-1 row-cols-md-3 g-4">
            @foreach (var court in Model.AvailableCourts)
            {
                <div class="col">
                    <div class="card h-100">
                        <div class="card-body">
                            <h5 class="card-title">@court.Name</h5>
                            <p class="card-text">
                                <strong>Location:</strong> @court.Location <br />
                                <strong>Capacity:</strong> @court.Capacity <br />
                                <strong>Open:</strong> @court.OpeningTime.ToString("hh\\:mm") - @court.ClosingTime.ToString("hh\\:mm")
                            </p>
                            <!-- Radio button with data attributes -->
                            <div class="form-check">
                                <input class="form-check-input court-radio" type="radio" 
                                       name="SelectedCourtId" 
                                       value="@court.Id" 
                                       data-opening-hour="@court.OpeningTime.Hours" 
                                       data-closing-hour="@court.ClosingTime.Hours" 
                                       id="court_@court.Id" />
                                <label class="form-check-label" for="court_@court.Id">
                                    Select this court
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Time slot selection (hidden by default) -->
        <div class="mt-4 p-3 border" id="CourtSlotContainer" style="max-width:300px; display:none;">
            <label class="form-label" for="SelectedTimeSlot">Select Time Slot</label>
            <select name="SelectedTimeSlot" id="SelectedTimeSlot" class="form-select">
                <option value="">-- Select Slot --</option>
            </select>
        </div>
    }
    else if (Model.BookingType == "Equipment" && Model.AvailableEquipment != null && Model.AvailableEquipment.Any())
    {
        <div class="row row-cols-1 row-cols-md-3 g-4">
            @foreach (var eq in Model.AvailableEquipment)
            {
                <div class="col">
                    <div class="card h-100">
                        <div class="card-body">
                            <h5 class="card-title">@eq.Name</h5>
                            <p class="card-text">
                                <strong>Total Quantity:</strong> @eq.Quantity <br />
                                <strong>Condition:</strong> @eq.Condition
                            </p>
                            <!-- Radio button to select equipment -->
                            <div class="form-check">
                                <input class="form-check-input equipment-radio" type="radio"
                                       name="SelectedEquipmentId"
                                       value="@eq.Id"
                                       id="eq_@eq.Id" />
                                <label class="form-check-label" for="eq_@eq.Id">
                                    Select this equipment
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Equipment Booking Time and Duration Selection -->
        <div class="mt-4 p-3 border" style="max-width: 400px;">
            <div class="mb-3">
                <label for="SelectedTimeSlot" class="form-label">Select Booking Time</label>
                <select id="SelectedTimeSlot" name="HourSlot" class="form-select">
                    <option value="">-- Select Time Slot --</option>
                    @for (int hour = 6; hour <= 21; hour++)
                    {
                        <option value="@hour">@hour:00 - @(hour + 1):00</option>
                    }
                </select>
            </div>
            <div class="mb-3">
                <label asp-for="SelectedQuantity" class="form-label">Quantity</label>
                <input asp-for="SelectedQuantity" id="SelectedQuantity" class="form-control" type="number" min="1" />                
                <small id="equipmentQuantityHelp" class="form-text text-muted">
                    Available: <span id="equipmentAvailableLabel">N/A</span>
                </small>
                <br/>
                <span role="alert" id="showError" style="color:red"></span>
            </div>
        </div>
    }
    else
    {
        if (!string.IsNullOrEmpty(Model.BookingType) && !string.IsNullOrEmpty(Model.SportType))
        {
            <p class="text-muted">No items found for your selection.</p>
        }
        else
        {
            <p class="text-muted">Please select Booking Type, Sport Type, and Date, then click Search.</p>
        }
    }

    <!-- 3) Confirm Booking Form -->
    @if ((Model.AvailableCourts != null && Model.AvailableCourts.Any()) ||
         (Model.AvailableEquipment != null && Model.AvailableEquipment.Any()))
    {
        <form method="post" id="bookingConfirm" asp-action="NewBooking" class="mt-4" onsubmit="return validate()">
            @Html.AntiForgeryToken()
            <!-- Preserve the search filter values -->
            <input type="hidden" name="BookingType" value="@Model.BookingType" />
            <input type="hidden" name="SportType" value="@Model.SportType" />
            <input type="hidden" name="SelectedDate" value="@Model.SelectedDate.ToString("yyyy-MM-dd")" />
            <input type="hidden" name="Selected" value="" />

            <!-- Hidden fields for the final selections -->
            <input type="hidden" name="SelectedTimeSlot" id="HiddenSelectedTimeSlot" value="@Model.SelectedTimeSlot" />
            <input type="hidden" asp-for="SelectedQuantity" id="HiddenSelectedQuantity" />
            <input type="hidden" asp-for="SelectedCourtId" id="HiddenSelectedCourtId" />
            <input type="hidden" asp-for="SelectedEquipmentId" id="HiddenSelectedEquipmentId" />

            <button id="btnSubmit" type="submit" class="btn btn-success">Confirm Booking</button>
        </form>
    }
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
                $(document).ready(function () {
            $("#nameError").hide();
            $("#SelectedQuantity").val('');
            getDate();

            // When a court radio button is selected, update the slot dropdown.
            $(".court-radio").change(function () {
                var id = $(this).val();
                var bookingDate = $("#datePicker").val();
                var $slotContainer = $("#CourtSlotContainer");
                var $slotSelect = $("#SelectedTimeSlot");

                if (!id || !bookingDate) {
                    alert("Please ensure a court and booking date are selected.");
                    return;
                }

                $.ajax({
                    url: '@Url.Action("GetAvailableCourtSlots", "Student")',
                    type: 'GET',
                    data: { id: id, bookingDate: bookingDate },
                    success: function (response) {
                        $slotContainer.show();
                        $slotSelect.empty();
                        $slotSelect.append($("<option>", { value: "", text: "-- Select Slot --" }));
                        if (response.success) {
                            $.each(response.slots, function (index, slot) {
                                $slotSelect.append($("<option>", { value: slot.hour, text: slot.displayText }));
                            });
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function () {
                        alert("Error retrieving available slots.");
                    }
                });
            });

            $(".equipment-radio").change(function () {
                $("#showError").hide();
                $("#SelectedQuantity").val('');
                $("#equipmentAvailableLabel").text('');
                $("#btnSubmit").prop('disabled', true);
            });


            // Copy the selected time slot into the hidden field.
            $("#SelectedTimeSlot").change(function () {
                $("#HiddenSelectedTimeSlot").val($(this).val());
            });

            $("#SelectedQuantity").change(function () {
                $("#HiddenSelectedQuantity").val($(this).val());
            });

            // Copy the selected court id into the hidden field.
            $('input:radio[name="SelectedCourtId"]').click(function () {
                $("#HiddenSelectedCourtId").val($(this).val());
            });

            // Copy the selected equipment id into the hidden field.
            $('input:radio[name="SelectedEquipmentId"]').click(function () {
                $("#HiddenSelectedEquipmentId").val($(this).val());
            });

            $("#SelectedQuantity").on('change keyup paste', function () {
                var opt = $("#SelectedQuantity").val();
                opt = isNaN(parseInt(opt)) ? 0 : parseInt(opt);
                if (opt == 0)
                    $("#btnSubmit").prop('disabled', true);
                CheckAvailableEquipment();
            });
        });

        function getDate() {
            var today = new Date();
            var mindate = today.getFullYear() + '-' + ('0' + (today.getMonth() + 1)).slice(-2) + '-' + ('0' + today.getDate()).slice(-2);
            $("#datePicker").attr('min', mindate);
        }

        function validate() {
            var bookingType = ("#BookingType").val();
            if (bookingType = "Equipment") {
                var equipmentId = $("input[name='SelectedEquipmentId']:checked").val();
                var bookingDate = $("#datePicker").val();
                var hourSlot = $("#SelectedTimeSlot").val();
                var opt = $("#SelectedQuantity").val();
                opt = isNaN(parseInt(opt)) ? 0 : parseInt(opt);
                if (!equipmentId || !bookingDate || !hourSlot || opt == 0) {
                    $("#showError").text('Please select Equipemt, Booking Date and Slot')
                    $("#showError").show();
                    $("#SelectedQuantity").val('');
                    $("#btnSubmit").prop('disabled', true);
                    return false;
                }
            }
            return true;
        }

        function CheckAvailableEquipment() {
            var equipmentId = $("input[name='SelectedEquipmentId']:checked").val();
            var bookingDate = $("#datePicker").val();
            var hourSlot = $("#SelectedTimeSlot").val();
            var opt = parseInt($("#SelectedQuantity").val());
            opt = isNaN(parseInt(opt)) ? 0 : parseInt(opt);

            if (!equipmentId || !bookingDate || !hourSlot) {
                $("#showError").text('\n Please select Equipemt, Booking Date and Slot')
                $("#showError").show();

                $("#SelectedQuantity").val('');
                $("#btnSubmit").prop('disabled', true);
                return false;
            }

            $.ajax({
                url: '@Url.Action("GetEquipmentAvailability", "Student")',
                type: 'GET',
                data: {
                    equipmentId: equipmentId,
                    bookingDate: bookingDate,
                    hourSlot: hourSlot
                },
                success: function (response) {
                    if (response.success) {
                        $("#equipmentAvailableLabel").text(response.availableQuantity);
                        $("input[name='SelectedQuantity']").attr("max", response.availableQuantity);
                        if (opt > response.availableQuantity || opt == 0) {
                            $("#SelectedQuantity").addClass("invalid");
                            $("#showError").text("\n Selected quantity is mandatory and should be less than available quantity");
                            $("#showError").show();
                            $("#btnSubmit").prop('disabled', true);
                            return false;
                        }
                        else {
                            $("#SelectedQuantity").removeClass("invalid");
                            $("#showError").hide();
                            $("#btnSubmit").removeAttr('disabled');
                            return true;
                        }
                    } else {
                        alert(response.message);
                        return false;
                    }
                },
                error: function (error) {
                    alert("Error checking equipment availability.");
                    reject(error);
                }
            });
            return false;
        };
    </script>
}